float EMA_ALPHA = 0.5;
int EMA_LP = 0.9;
 
int values[] = {
  0.20,
 1.10,
 0.20,
 0.80,
 0.20,
 0.20,
 0.80,
 0.80,
 0.20,
 0.20,
 0.20,
 0.20,
 0.20,
 0.20,
 0.20,
 2.10,
 0.80,
 0.20,
 0.20,
 1.50,
 0.20,
 1.50,
 0.20,
 0.20,
 0.20,
 0.20,
 0.20,
 0.20,
 0.20,
 0.20,
 0.20,
 2.10,
 0.20,
 0.80,
 0.20,
 0.20,
 0.20,
 0.20,
 0.20,
 0.20,
 0.20,
 0.20,
 0.20,
 0.20,
 0.20,
 0.20,
 0.20,
 0.80,
 1.50,
 0.80,
 2.10,
 0.20,
 0.20,
 1.50,
 1.50,
 0.20,
 0.20,
 0.20,
 0.20,
 0.20,
 0.20,
 0.20,
 0.20,
 0.20,
 2.10,
 0.80,
 0.80,
 0.20,
 0.20,
 0.20,
 2.10,
 0.80,
 0.20,
 0.20,
 0.20,
 2.10,
 0.20,
 0.20,
 0.20,
 0.20,
 2.10,
 0.80,
 2.10,
 2.10,
 0.80,
 0.20,
 0.20,
 0.80,
 0.20,
 2.10,
 0.20,
 0.20,
 0.20,
 0.20,
 0.20,
 0.20,
 1.50,
 2.10,
 0.20,
 1.50,
 0.20,
 2.10,
 2.10,
 0.20,
 2.10,
 0.80,
 0.20,
 0.80,
 0.20,
 0.20,
 0.20,
 0.20,
 0.80,
 1.50,
 0.80,
 0.20,
 0.20,
 2.10,
 2.10,
 1.50,
 0.20,
 0.20,
 0.20,
 0.20,
 0.20,
 0.20,
 0.20,
 0.20,
 0.20,
 2.10,
 1.50,
 2.10,
 0.20,
 0.20,
 0.20,
 1.50,
 0.80,
 0.20,
 0.20,
 0.80,
 0.20,
 0.20,
 0.20,
 0.20,
 0.20,
 0.20,
 2.10,
 2.10,
 0.20,
 0.20,
 0.20,
 2.10,
 2.10,
 0.20,
 2.10,
 0.20,
 2.10,
 2.10,
 0.20,
 0.20,
 0.20,
 2.10,
 2.10,
 0.20,
 0.20,
 2.10,
 2.10,
 0.20,
 0.20,
 0.20,
 2.10,
 2.10,
 0.20,
 0.20,
 0.20,
 2.10,
 3.40,
 2.10,
 2.10,
 2.10,
 2.10,
 2.10,
 0.20,
 2.10,
 0.80,
 0.20,
 2.10,
 0.20,
 2.10,
 0.20,
 2.10,
 0.20,
 0.20,
 0.20,
 0.20,
 2.10,
 1.90,
 0.20,
 0.20,
 2.10,
 2.80,
 0.20,
 0.20,
 2.10,
 2.10,
 2.10,
 0.20,
 0.20,
 0.20,
 2.10,
 2.10,
 0.20,
 0.80,
 0.20,
 2.10,
 2.10,
 0.20,
 0.20,
 0.20,
 2.10,
 2.10,
 0.20,
 0.20,
 0.20,
 1.50,
 2.10,
 0.20,
 2.10,
 0.20,
 2.10,
 0.20,
 0.20,
 0.20,
 2.10,
 4.50,
 0.20,
 0.20,
 0.20,
 2.10,
 2.10,
 0.20,
 0.20,
 0.20,
 2.10,
 2.10,
 0.20,
 0.20,
 0.20,
 2.10,
 2.10,
 0.20,
 2.10,
 2.10,
 2.10,
 2.10,
 0.20,
 0.20,
 0.20,
 4.60,
 3.60,
 0.20,
 0.20,
 2.10,
 2.10,
 0.20,
 0.20,
 2.10,
 2.10,
 2.10,
 0.20,
 2.10,
 0.20,
 2.10,
 3.60,
 0.20,
 2.10,
 2.10,
 0.80,
 1.40,
 0.20,
 0.20,
 0.20,
 2.10,
 2.10,
 0.20,
 0.20,
 0.80,
 2.10,
 2.10,
 0.20,
 0.20,
 0.20,
 2.10,
 2.10,
 0.20,
 0.20,
 2.10,
 2.10,
 0.20,
 0.20,
 0.20,
 0.20,
 2.10,
 0.20,
 0.20,
 0.20,
 0.20,
 2.10,
 0.20,
 0.20,
 0.20,
 2.10,
 2.10,
 0.20,
 2.10,
 2.10,
 2.10,
 2.10,
 2.10,
 0.20,
 0.20,
 3.40,
 2.10,
 0.20,
 2.10,
 0.80,
 4.60,
 0.80,
 0.20,
 2.10,
 2.10,
 2.10,
 0.20,
 0.20,
 0.20,
 2.10,
 3.00,
 0.20,
 2.10,
 2.10,
 2.10,
 2.10,
 0.20,
 0.20,
 0.20,
 0.20,
 2.10,
 0.20,
 0.20,
 0.20,
 2.10,
 2.10,
 0.20,
 0.20,
 0.20,
 2.10,
 2.10,
 0.20,
 0.20,
 2.10,
 2.10,
 0.20,
 0.20,
 0.20,
 0.20,
 0.20,
 0.20,
 0.20,
 0.20,
 0.20,
 2.10,
 0.20,
 0.20,
 0.20,
 2.10,
 2.10,
 0.20,
 0.20,
 0.20,
 2.10,
 3.90,
 0.20,
 0.20,
 0.20,
 2.10,
 2.10,
 0.20,
 2.10,
 0.20,
 0.20,
 0.20,
 0.20,
 2.10,
 0.20,
 2.10,
 0.20,
 0.20,
 0.20,
 2.10,
 1.50,
 1.50,
 0.20,
 0.20,
 2.10,
 2.10,
 0.20,
 0.20,
 0.20,
 2.10,
 2.10,
 0.20,
 2.10,
 2.10,
 0.80,
 4.70,
 0.20,
 2.10,
 2.10,
 2.10,
 2.10,
 0.20,
 0.20,
 2.10,
 2.90,
 0.20,
 0.20,
 0.20,
 2.10,
 2.10,
 0.20,
 0.20,
 0.20,
 2.10,
 2.10,
 0.20,
 1.50,
 0.20,
 0.20,
 2.10,
 0.20,
 0.20,
 0.20,
 2.10,
 2.10,
 0.20,
 0.20,
 0.20,
 2.10,
 2.10
} ;

 
int valuesLength = sizeof(values) / sizeof(int);
 
int getMeasure()
{
   int static index = 0;
   index++;
   return values[index - 1];
}
 
void setup()
{
   Serial.begin(115200);
 
   for (int iCount = 0; iCount < valuesLength; iCount++)
   {
      int value = getMeasure();
      int filteredLP = EMALowPassFilter(value);
     Serial.print(value);
     Serial.print(",");
      Serial.println(filteredLP);
   }
}
 
void loop()
{
   delay(10000);
}
 
int EMALowPassFilter(int value)
{
   EMA_LP = EMA_ALPHA * value + (1 - EMA_ALPHA) * EMA_LP;
   return EMA_LP;
}
 

